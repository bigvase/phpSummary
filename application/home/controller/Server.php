<?php
/**
 * Created by PhpStorm.
 * User: bigsave
 * Date: 2018/5/31
 * Time: 9:48
 */

namespace app\home\controller;


use think\Controller;
use think\Db;
use think\Exception;

class Server extends controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     *
     */
    public function server(){
//        $a = ["requestNo"=>"aaaaaaa","username"=>"eeeee","timestamp"=>"123456"];
//        echo json_encode($a);die;
        $respData= [];
        $service = \think\loader::model('Admin/HttpRequestService','service');
        if(!empty($service->errMsg)){
            try{
                $respData = $this->doRun();
            }catch (Exception $e){
                exception($e->getMessage());
            }
        }
        if ($service->errMsg) {
            $status                 = 'INIT';
            $respData['result']     = false;
            $respData['resultCode'] = '0001';
            $respData['status']     = 'INIT';
            $respData['errorCode']  = $service->errMsg;
            $respData['errorMsg']   = $service->errMsg;
            $respData['reqData']    = $_POST['reqData'];
        } else {
            $status = 'SUCCESS';
        }
        if (empty($respData) || is_array($respData)) {
            $respData = json_encode($respData);
        }
        //加签

        $sign    = 'xxxxxxxx';//service('Admin/EscrowHttp')->ecsSign($respData, $service->private_key);
        $retData = [
            'status'      => $status,
            'serviceName' => $service->inter,
            'platform'    => $service->username,
            'respData'    => $respData,
            'sign'        => $sign,
        ];
        echo json_encode($retData);
        $respDataJson = json_encode($retData);
        $saveData     = ['return' => $respDataJson, 'returnTime' => time(), 'returnNum' => '1'];
        //返回参数保存
        try {
            DB::name('service_request_log')->where(['requestNo' => $service->requestNo, 'platform' => $service->username])->update($saveData);
        } catch (Exception $e) {

        }
    }

    private function doRun(){
        $interName = input('interName');
        $username  = input('platform');
        $reqData   = json_decode(input('detailData'),true);
        $interConfig = \think\Config::load(APP_PATH . "admin/interfaceParam.php",'','admin');

        if (!in_array($interName, $interConfig['interface_name'])) exception("{$interName}方法不存在");
        //尝试调用
        try {
            $ret             = call_user_func_array([$this, underlined_hump(strtolower($interName) . '_Callback')], [$reqData]);
            $ret['platform'] = $username;
            return $ret;
        } catch (Exception $e) {
            exception($e->getMessage());
        }
        return false;
    }

    /**
     * 测试
     */
    private function testCallback(){
        return ['aaa'=>'bbb'];
    }

}